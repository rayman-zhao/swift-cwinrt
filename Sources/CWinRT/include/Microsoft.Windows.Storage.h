// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Storage.h"
#include "Windows.System.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData;

#endif // ____x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer;

#endif // ____x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataStatics __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataStatics;

#endif // ____x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
        __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainerVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainerVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainerVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
        HSTRING key,
        __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer** first,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainerVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIMap_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMap_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMap_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer __x_ABI_C__FIMap_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMap_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer;

    typedef struct __x_ABI_C__FIMap_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
        HSTRING key,
        __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
        HSTRING key,
        __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer* value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This,
        HSTRING key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIMap_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer* This);

        END_INTERFACE
    } __x_ABI_C__FIMap_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainerVtbl;

    interface __x_ABI_C__FIMap_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer
    {
        CONST_VTBL struct __x_ABI_C__FIMap_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMap_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet;

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFolder __x_ABI_CWindows_CStorage_CIStorageFolder;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CIUser __x_ABI_CWindows_CSystem_CIUser;

#endif // ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__

typedef enum __x_ABI_CMicrosoft_CWindows_CStorage_CApplicationDataCreateDisposition __x_ABI_CMicrosoft_CWindows_CStorage_CApplicationDataCreateDisposition;

typedef enum __x_ABI_CMicrosoft_CWindows_CStorage_CApplicationDataLocality __x_ABI_CMicrosoft_CWindows_CStorage_CApplicationDataLocality;

enum __x_ABI_CMicrosoft_CWindows_CStorage_CApplicationDataCreateDisposition
    {
        __x_ABI_CMicrosoft_CWindows_CStorage_CApplicationDataCreateDisposition_Always = 0,
    __x_ABI_CMicrosoft_CWindows_CStorage_CApplicationDataCreateDisposition_Existing = 1,
};

enum __x_ABI_CMicrosoft_CWindows_CStorage_CApplicationDataLocality
    {
        __x_ABI_CMicrosoft_CWindows_CStorage_CApplicationDataLocality_Local = 0,
    __x_ABI_CMicrosoft_CWindows_CStorage_CApplicationDataLocality_LocalCache = 3,
    __x_ABI_CMicrosoft_CWindows_CStorage_CApplicationDataLocality_SharedLocal = 4,
    __x_ABI_CMicrosoft_CWindows_CStorage_CApplicationDataLocality_Temporary = 2,
    __x_ABI_CMicrosoft_CWindows_CStorage_CApplicationDataLocality_Machine = 1000,
};

#if !defined(____x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsMachinePathSupported)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_LocalCachePath)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_LocalPath)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_MachinePath)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SharedLocalPath)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_TemporaryPath)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_LocalCacheFolder)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* get_LocalFolder)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* get_MachineFolder)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* get_SharedLocalFolder)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* get_TemporaryFolder)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* get_LocalSettings)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData* This,
        __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer** value);
    HRESULT (STDMETHODCALLTYPE* ClearAsync)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData* This,
        enum __x_ABI_CMicrosoft_CWindows_CStorage_CApplicationDataLocality locality,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* ClearPublisherCacheFolderAsync)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData* This,
        HSTRING folderName,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* GetPublisherCachePath)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData* This,
        HSTRING folderName,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetPublisherCacheFolder)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData* This,
        HSTRING folderName,
        __x_ABI_CWindows_CStorage_CIStorageFolder** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Containers)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer* This,
        __x_ABI_C__FIMap_2_HSTRING___x_ABI_CMicrosoft__CWindows__CStorage__CApplicationDataContainer** value);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Locality)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer* This,
        enum __x_ABI_CMicrosoft_CWindows_CStorage_CApplicationDataLocality* value);
    HRESULT (STDMETHODCALLTYPE* get_Values)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet** value);
    HRESULT (STDMETHODCALLTYPE* CreateContainer)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer* This,
        HSTRING name,
        enum __x_ABI_CMicrosoft_CWindows_CStorage_CApplicationDataCreateDisposition disposition,
        __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer** result);
    HRESULT (STDMETHODCALLTYPE* DeleteContainer)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer* This,
        HSTRING name);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainerVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataContainer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefault)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataStatics* This,
        __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData** result);
    HRESULT (STDMETHODCALLTYPE* GetForUser)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataStatics* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData** result);
    HRESULT (STDMETHODCALLTYPE* GetForPackageFamily)(__x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataStatics* This,
        HSTRING packageFamilyName,
        __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationData** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataStaticsVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CStorage_CIApplicationDataStatics_INTERFACE_DEFINED__) */
    
